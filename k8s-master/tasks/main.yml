---
# tasks file for k8s-master
- name: installing docker
  package:
      name: docker
      state: present

- name: starting docker service
  service: 
      name: docker 
      state: started
      
- name: enabling docker
  service: 
      name: docker
      enabled: yes  

- name: configuring yum repo for k8s
  yum_repository:
      name: kubernetes
      description: kubernetes repo
      baseurl: "https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64"
      enabled: 1
      gpgcheck: 0
      repo_gpgcheck: 0
      gpgkey: >- 
         https://packages.cloud.google.com/yum/doc/yum-key.gpg 
         https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      

- name: installing kubeadm, kubelet, kubectl and iproute-tc
  shell: "yum install -y kubeadm kubelet kubectl  "
  changed_when: false

- name: enabling kublet
  shell: "systemctl enable kubelet --now "
  changed_when: false

- name: pulling kubeadm config image 
  shell: "kubeadm config images pull" 

- name: Creating daemon.json file inside /etc/docker
  template:
          dest: "/etc/docker/daemon.json"
          src: "daemon.json" 

- name: Re-starting Docker
  service:
      name: docker
      state:  restarted
      enabled: yes

- name: installing iproute-tc
  package: 
      name: iproute-tc
        
- name: Update config file for k8s
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
- name: Restarting systctl
  shell: "sysctl --system"

- name: starting kubeadm service
  shell: "kubeadm init --pod-network-cidr=10.240.0.0/16 --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem --node-name=master"
  ignore_errors: yes
  register: done

- name: "Creating the directory"
  file:
      name: "$HOME/.kube"
      state: directory  

- name: "copying config file"
  shell: "sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config"

- shell: "chown $(id -u):$(id -g) $HOME/.kube/config"

- name: "Setup Cluster"
  shell: "sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"

- name: "Getting the join command"
  shell: "kubeadm token  create --print-join-command"
  register: token
  ignore_errors: yes

- debug:
    var: token.stdout_lines
  register: token



